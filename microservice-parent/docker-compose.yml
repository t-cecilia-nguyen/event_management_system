version: '3.9'

services:


  eureka-server:
    build:
      context: ./discovery-server
      dockerfile: ./Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring



  event-service:
    image: event-service
    ports:
      - "8098:8098"
    build:
      context: ./event-service
      dockerfile: ./Dockerfile
    container_name: event-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - mongodb-event-service
    networks:
      - spring


  mongodb-event-service:
    image: mongo:latest
    ports:
      - "27018:27017"
    environment: # read from documentation
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes: # preserve and persist data on my hard drive
      - ./data/mongo/events:/data/db   # localhost-hard-drive:virtual-logical-drive( virtual inside containerize environment)
      - ./local-docker-file/mongo/init/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-event-service
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONG0DB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb-event-service:27017/

    container_name: mongo-express
    depends_on:
      - mongodb-event-service
    networks:
      - spring



  user-service:
    image: user-service
    container_name: user-service
    ports:
      - "8097:8097"
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    depends_on:
      - user-postgres
      - eureka-server
    networks:
      - spring

  room-service:
    image: room-service
    container_name: room-service
    ports:
      - "8095:8095"
    build:
      context: ./room-service
      dockerfile: ./Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - room-postgres
    networks:
      - spring

  user-postgres:
    image: postgres:latest
    container_name: user-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - ./data/postgres/users:/var/lib/postgresql/data
      - ./local-docker-file/postgres/init/user/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring
    restart: unless-stopped

  room-postgres:
    image: postgres:latest
    container_name: room-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - ./data/postgres/rooms:/var/lib/postgresql/data
      - ./local-docker-file/postgres/init/room/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-event-booking
    ports:
      - "8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      - PGADMIN_DEFAULT_PASSWORD=password
    networks:
      - spring
    restart: unless-stopped

# Optional volumes section for persisting data
volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge